AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ProjectName:
    Type: String
  Environment:
    Type: String
  RegionShortName:
    Type: String
  GitHubOAuthToken:
    Type: String
  GitHubRepo:
    Type: String
  GitHubBranch:
    Type: String
  GitHubOwner:
    Type: String

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-cicd-artifacts-${RegionShortName}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      Tags:
        - Key: project-name
          Value: !Ref ProjectName
        - Key: environment-type
          Value: !Ref Environment

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: [ ]
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        # Build and Deploy, etc., stages would follow. Here is an example
#        - Name: Deploy
#          Actions:
#            - Name: Deploy
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Provider: CloudFormation
#                Version: '1'
#              InputArtifacts:
#                - Name: SourceCode
#              Configuration:
#                ActionMode: CREATE_UPDATE
#                Capabilities: CAPABILITY_IAM
#                RoleArn: !GetAtt CloudformationRole.Arn
#                StackName: !Ref ApplicationStackName
#                TemplatePath: !Sub "SourceCode::application.yaml"
#              RunOrder: 1
      Tags:
        - Key: project-name
          Value: !Ref ProjectName
        - Key: environment-type
          Value: !Ref Environment

  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions