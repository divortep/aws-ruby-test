AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ProjectName:
    Type: String
  RegionShortName:
    Type: String
  GitHubOAuthToken:
    Type: String
  GitHubRepo:
    Type: String
  GitHubBranch:
    Type: String
  GitHubOwner:
    Type: String

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-cicd-${RegionShortName}
      AccessControl: Private
      Tags:
        - Key: project-name
          Value: !Ref ProjectName

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-${RegionShortName}
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: [ ]
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: sourcecode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: sourcecode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              OutputArtifacts:
                - Name: app-build
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1

        # Build and Deploy, etc., stages would follow. Here is an example
#        - Name: Deploy
#          Actions:
#            - Name: Deploy
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Provider: CloudFormation
#                Version: '1'
#              InputArtifacts:
#                - Name: SourceCode
#              Configuration:
#                ActionMode: CREATE_UPDATE
#                Capabilities: CAPABILITY_IAM
#                RoleArn: !GetAtt CloudformationRole.Arn
#                StackName: !Ref ApplicationStackName
#                TemplatePath: !Sub "SourceCode::application.yaml"
#              RunOrder: 1
      Tags:
        - Key: project-name
          Value: !Ref ProjectName

  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-cicd-${RegionShortName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

#      Policies:
#        - PolicyName: CodeBuildRolePolicy
#          PolicyDocument:
#            Version: 2012-10-17
#            Statement:
#              - Effect: Allow
#                Resource: arn:aws:logs:*:*:*
#                Action:
#                  - logs:CreateLogGroup
#                  - logs:CreateLogStream
#                  - logs:DescribeLogStreams
#                  - logs:PutLogEvents
#                  - logs:PutSubscriptionFilter
#              - Effect: Allow
#                Resource: !GetAtt PipelineArtifactsBucket.Arn
#                Action:
#                  - s3:PutObject
#                  - s3:GetObject
#                  - s3:GetObjectVersion
#                  - s3:GetBucketAcl
#                  - s3:GetBucketLocation
#              - Effect: Allow
#                Resource: !GetAtt PipelineArtifactsBucket.Arn
#                Action:
#                  - s3:PutObject
#                  - s3:GetObject
#                  - s3:GetObjectVersion
#                  - s3:GetBucketAcl
#                  - s3:GetBucketLocation
#              - Effect: Allow
#                Resource: '*'
#                Action:
#                  - codepipeline:*
#                  - codecommit:*
#                  - codedeploy:*
#                  - iam:PassRole
#                  - iam:GetRole
      Tags:
        - Key: project-name
          Value: !Ref ProjectName


  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-${RegionShortName}
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        ArtifactIdentifier: !Sub '${ProjectName}-aws-resources'
        Type: 'CODEPIPELINE'
        OverrideArtifactName: true
      Cache:
        Type: S3
        Location: !Sub '${PipelineArtifactsBucket}/dependencies/cache'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: 'PROJECT_NAME'
            Value: !Ref ProjectName
      Source:
        BuildSpec: 'buildspec.yml'
        Type: 'CODEPIPELINE'
      TimeoutInMinutes: 10
      Tags:
        - Key: project-name
          Value: !Ref ProjectName

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-cicd-build-${RegionShortName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
#      Policies:
#        - PolicyName: CodeBuildRolePolicy
#          PolicyDocument:
#            Version: 2012-10-17
#            Statement:
#              - Effect: Allow
#                Resource: arn:aws:logs:*:*:*
#                Action:
#                  - logs:CreateLogGroup
#                  - logs:CreateLogStream
#                  - logs:DescribeLogStreams
#                  - logs:PutLogEvents
#                  - logs:PutSubscriptionFilter
#              - Effect: Allow
#                Resource: !GetAtt PipelineArtifactsBucket.Arn
#                Action:
#                  - s3:*
#              - Effect: Allow
#                Resource: '*'
#                Action:
#                  - codebuild:CreateReportGroup
#                  - codebuild:CreateReport
#                  - codebuild:UpdateReport
#                  - codebuild:BatchPutTestCases
#                  - codebuild:BatchPutCodeCoverages
      Tags:
        - Key: project-name
          Value: !Ref ProjectName